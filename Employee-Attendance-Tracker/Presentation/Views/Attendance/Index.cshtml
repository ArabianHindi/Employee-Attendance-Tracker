@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model Employee_Attendance_Tracker.Models.ViewModels.AttendanceFilterViewModel

@{
    ViewData["Title"] = "Attendance List";
}

<h2>Attendance Records</h2>

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2>Attendance Records</h2>
    <a asp-action="Create" class="btn btn-success">
        <i class="fa fa-plus"></i> Mark Attendance
    </a>
</div>

<form asp-action="Index" method="get" class="row mb-4">
    <div class="col-md-2">
        <label>Department</label>
        @Html.DropDownListFor(m => m.DepartmentId, Model.Departments, "All", new { @class = "form-control" })
    </div>
    <div class="col-md-2">
        <label>Employee</label>
        @Html.DropDownListFor(m => m.EmployeeId, Model.Employees, "All", new { @class = "form-control" })
    </div>
    <div class="col-md-2">
        <label>Start Date</label>
        <input asp-for="StartDate" class="form-control" type="date" />
    </div>
    <div class="col-md-2">
        <label>End Date</label>
        <input asp-for="EndDate" class="form-control" type="date" />
    </div>
    <div class="col-md-2 mt-4">
        <input type="submit" value="Filter" class="btn btn-primary" />
    </div>
</form>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Employee</th>
            <th>Department</th>
            <th>Date</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var attendance in Model.FilteredAttendances)
        {
            <tr>
                <td>@attendance.EmployeeName</td>
                <td>@attendance.DepartmentName</td>
                <td>@attendance.Date.ToString("yyyy-MM-dd")</td>
                <td>@(attendance.IsPresent ? "Present" : "Absent")</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@attendance.Id" class="btn btn-sm btn-warning">Edit</a>
                    <form asp-action="Delete" asp-route-id="@attendance.Id" method="post" class="d-inline">
                        <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Delete this record?')">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<hr />

<h4>Live Attendance Status</h4>
<div class="row">
    <div class="col-md-4">
        <label>Employee</label>
        <select id="liveEmployeeSelect" class="form-control">
            <option disabled selected>Select employee</option>
            @foreach (var emp in Model.Employees)
            {
                <option value="@emp.Value">@emp.Text</option>
            }
        </select>
    </div>
    <div class="col-md-4">
        <label>Date</label>
        <input type="date" id="liveDateInput" class="form-control" max="@DateTime.Today.ToString("yyyy-MM-dd")" />
    </div>
    <div class="col-md-4">
        <label>Status</label>
        <div id="liveStatusDisplay" class="form-control bg-light">Not selected</div>
    </div>
</div>

@section Scripts {
    <script>
        async function fetchAttendanceStatus() {
            const empId = document.getElementById('liveEmployeeSelect').value;
            const date = document.getElementById('liveDateInput').value;
            if (!empId || !date) return;

            const response = await fetch(`/Attendance/GetAttendanceStatus?employeeId=${empId}&date=${date}`);
            const data = await response.json();
            document.getElementById('liveStatusDisplay').textContent = data.status;

            // Disable future dates
            if (!data.canMark) {
                document.getElementById('liveStatusDisplay').textContent += " (Future date - disabled)";
            }
        }

        document.getElementById('liveEmployeeSelect').addEventListener('change', fetchAttendanceStatus);
        document.getElementById('liveDateInput').addEventListener('change', fetchAttendanceStatus);
    </script>
}
